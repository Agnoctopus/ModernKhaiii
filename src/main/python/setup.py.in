# -*- coding: utf-8 -*-


"""
@CPACK_PACKAGE_DESCRIPTION_SUMMARY@

__version__ = '@KHAIII_VERSION@'
__author__ = '@CPACK_PACKAGE_VENDOR@'
__copyright__ = 'Copyright (C) 2018-, Kakao Corp. All rights reserved.'
__license__ = 'Apache 2.0'
__maintainer__ = 'Jamie'
__email__ = 'jamie.lim@kakaocorp.com'
"""


###########
# imports #
###########
import os
import shutil
import subprocess
import zipfile

from setuptools import setup
from setuptools.command.build_py import build_py as _build_py

#############
# constants #
#############
_BUILD_DIR = "@CMAKE_BINARY_DIR@"
_SRC_NAME = "@CPACK_SOURCE_PACKAGE_FILE_NAME@"


#########
# types #
#########
class CustomBuild(_build_py):
    """
    custom handler for 'build' command
    """

    def run(self):
        """
        run build command
        """
        self.announce(
            "Running custom build command: Copying C++ build outputs into the Python package...",
            level=3,
        )

        # Source and destination paths
        src_lib_dir = os.path.abspath(os.path.join(_BUILD_DIR, "lib"))
        dst_lib_dir = os.path.join("khaiii", "lib")
        src_share_dir = os.path.abspath(os.path.join(_BUILD_DIR, "share"))
        dst_share_dir = os.path.join("khaiii", "share")

        # Lib dir
        if os.path.exists(dst_lib_dir):
            self.announce(f"Removing existing directory: {dst_lib_dir}", level=3)
            shutil.rmtree(dst_lib_dir)
        self.announce(f"Copying lib from {src_lib_dir} to {dst_lib_dir}", level=3)
        shutil.copytree(src_lib_dir, dst_lib_dir)

        # Share dir
        if os.path.exists(dst_share_dir):
            self.announce(f"Removing existing directory: {dst_share_dir}", level=3)
            shutil.rmtree(dst_share_dir)
        self.announce(f"Copying share from {src_share_dir} to {dst_share_dir}", level=3)
        shutil.copytree(src_share_dir, dst_share_dir)

        # Build standard command
        _build_py.run(self)


#############
# functions #
#############
def readme():
    """
    read content from README.md file
    Returns:
        long description (content of README.md)
    """
    readme_path = os.path.join("@CMAKE_SOURCE_DIR@", "README.md")
    with open(readme_path, "r", encoding="utf-8") as f:
        return f.read()


#########
# setup #
#########
setup(
    name="khaiii",
    version="@KHAIII_VERSION@",
    description="@CPACK_PACKAGE_DESCRIPTION_SUMMARY@",
    long_description=readme(),
    url="https://github.com/kakao/khaiii",
    author="@CPACK_PACKAGE_VENDOR@",
    author_email="jamie.lim@kakaocorp.com",
    classifiers=[
        "Development Status :: 5 - Stable",
        "License :: OSI Approved :: Apache 2.0",
        "Programming Language :: Python :: 3",
    ],
    license="Apache 2.0",
    packages=["khaiii"],
    include_package_data=True,
    install_requires=[],
    setup_requires=["pytest-runner"],
    tests_require=["pytest"],
    zip_safe=False,
    cmdclass={"build_py": CustomBuild},
)
